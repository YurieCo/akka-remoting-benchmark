server {
akka {
    actor {
       mailbox {
                        bounded-mailbox {
                            #mailbox-type = "akka.dispatch.BoundedMailbox",
                            mailbox-type = "akka.dispatch.NonBlockingBoundedMailbox"
                            mailbox-capacity = 150000,
                            mailbox-push-timeout-time = 20s,

                            auto-down = "off",
                        }
            }

       #serialize-messages = on
      provider = "akka.remote.RemoteActorRefProvider"
      serializers {
                      kryo = "com.romix.akka.serialization.kryo.KryoSerializer"
                   }
                   serialization-bindings {
                      "java.lang.String"=kryo
                   }

                 kryo  {
                      type = "nograph"
                      idstrategy = "explicit"
                      serializer-pool-size = 600
                      max-buffer-size = -1
                      use-manifests = false
                      post-serialization-transformations = "lz4"
                      implicit-registration-logging = false
                      kryo-trace = false
                      mappings {
                          "java.lang.String"=2
                      }
                      classes =[]
                  }
       
    }
    remote {
       enabled-transports = ["akka.remote.netty.tcp"]
       netty.tcp {
            hostname = "127.0.0.1"
            port = 3558
       }
    }
}
}

client {
akka {
    actor {
       provider = "akka.remote.RemoteActorRefProvider"
       mailbox {
                        bounded-mailbox {
                            #mailbox-type = "akka.dispatch.BoundedMailbox",
                            mailbox-type = "akka.dispatch.NonBlockingBoundedMailbox"
                            mailbox-capacity = 150000,
                            mailbox-push-timeout-time = 20s,

                            auto-down = "off",
                        }
            }

       #serialize-messages = on
      provider = "akka.remote.RemoteActorRefProvider"
      serializers {
                      kryo = "com.romix.akka.serialization.kryo.KryoSerializer"
                   }
                   serialization-bindings {
                      "java.lang.String"=kryo
                   }

                 kryo  {
                      type = "nograph"
                      idstrategy = "explicit"
                      serializer-pool-size = 600
                      max-buffer-size = -1
                      use-manifests = false
                      post-serialization-transformations = "lz4"
                      implicit-registration-logging = false
                      kryo-trace = false
                      mappings {
                          "java.lang.String"=2
                      }
                      classes =[]
                  }
    }
    remote {
       enabled-transports = ["akka.remote.netty.tcp"]
       netty.tcp {
            hostname = "127.0.0.1"
            port = 4558
       }
    }
}
}

client2 {
akka {

    actor {
       provider = "akka.remote.RemoteActorRefProvider"
    }
    remote {
       enabled-transports = ["akka.remote.netty.tcp"]
       netty.tcp {
            hostname = "127.0.0.1"
            port = 2553
       }
    }
}
}
